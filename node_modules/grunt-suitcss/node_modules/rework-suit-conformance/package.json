{
  "name": "rework-suit-conformance",
  "version": "0.4.1",
  "description": "SUIT CSS component conformance plugin for Rework",
  "files": [
    "index.js",
    "lib"
  ],
  "keywords": [
    "css",
    "rework",
    "suit",
    "conformance",
    "test",
    "lint"
  ],
  "license": "MIT",
  "devDependencies": {
    "mocha": "~1.14.0",
    "rework": "^1.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/suitcss/rework-suit-conformance.git"
  },
  "scripts": {
    "test": "mocha --no-colors",
    "watch": "mocha --reporter spec --watch"
  },
  "readme": "# rework-suit-conformance\n\n[![Build Status](https://secure.travis-ci.org/suitcss/rework-suit-conformance.png?branch=master)](http://travis-ci.org/suitcss/rework-suit-conformance)\n\nA [Rework](https://github.com/reworkcss/rework) plugin to check the conformance\nof a component's CSS to the [SUIT CSS](https://github.com/suitcss/suit) methodology.\n\n## Installation\n\n```\nnpm install rework-suit-conformance\n```\n\n## Conformance tests\n\n**Default mode**:\n\n* Only allow selectors that *begin* with a class matching the defined `ComponentName`.\n* Only allow custom-property names that *begin* with the defined `ComponentName`.\n* The `:root` selector can only contain custom-properties.\n* The `:root` cannot be combined with other selectors.\n\n**Strict mode**:\n\n* All the tests in \"default mode\".\n* Disallow selectors that contain any classes that do not match the SUIT CSS conventions.\n* Disallow selectors that contain classes of other components.\n\n## Use\n\n### Defining a component\n\nThe plugin will only run against files that explicitly define themselves as a\nnamed component, using a `/** @define ComponentName */` or `/** @define\nComponentName; use strict */` comment on the first line of the file.\n\n```css\n/** @define MyComponent */\n\n:root {\n  --MyComponent-property: value;\n}\n\n.MyComponent {}\n\n.MyComponent .other {}\n```\n\nStrict mode:\n\n```css\n/** @define MyComponent; use strict */\n\n:root {\n  --MyComponent-property: value;\n}\n\n.MyComponent {}\n\n.MyComponent-other {}\n```\n\n### Testing CSS files\n\nPass your individual CSS files through the plugin. It will throw errors for\nconformance failures, which you can log when caught by your build tools.\n\n```js\nvar rework = require('rework');\nvar conformance = require('rework-suit-conformance');\n\nfiles.forEach(function (file) {\n  var css = fs.readFileSync(file, 'utf-8');\n  rework(css).use(conformance);\n});\n```\n\n## Development\n\nInstall the dependencies.\n\n```\nnpm install\n```\n\nRun the tests.\n\n```\nnpm test\n```\n\nWatch and automatically re-run the tests.\n\n```\nnpm run watch\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/suitcss/rework-suit-conformance/issues"
  },
  "_id": "rework-suit-conformance@0.4.1",
  "_from": "rework-suit-conformance@^0.4.1"
}
