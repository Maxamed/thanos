{
  "name": "rework-ie-limits",
  "description": "A Rework plugin to check if the number of CSS selectors in a file exceeds the limit for IE < 10",
  "version": "0.1.1",
  "main": "index.js",
  "files": [
    "index.js"
  ],
  "devDependencies": {
    "chai": "~1.8.1",
    "mocha": "~1.16.2",
    "rework": "~0.20.2"
  },
  "scripts": {
    "test": "mocha --no-colors --reporter spec",
    "watch": "mocha --watch --reporter spec"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "reworkcss/rework-mixin-opacity"
  },
  "keywords": [
    "rework",
    "style",
    "stylesheet",
    "css",
    "ie",
    "selector",
    "limit"
  ],
  "readme": "# rework-ie-limits\n\n[![Build Status](https://secure.travis-ci.org/reworkcss/rework-ie-limits.png?branch=master)](http://travis-ci.org/reworkcss/rework-ie-limits)\n\nA [Rework](https://github.com/reworkcss/rework) plugin that tests whether a chunk of CSS exceeds IE < 10's limit of 4095 selectors.\n\n## Installation\n\nInstall with npm:\n\n```\nnpm install rework-ie-limits\n```\n\n## Use\n\nAs a Rework plugin:\n\n```js\nvar rework = require('rework');\nvar ieLimits = require('rework-ie-limits');\n\nvar css = rework(cssinput).use(ieLimits);\n```\n\nIt will throw an `Error` if the limit has been exceeded.\n\nNote that the plugin is extremely conservative. It will assume that ALL\nselectors (and those within any media query) are supported and applied by each\nversion of IE < 10. Therefore, there will be some false positives as you\napproach the limit.\n\n## Testing\n\nFor CI:\n\n```\nnpm test\n```\n\nFor development:\n\n```\nnpm run watch\n```\n",
  "readmeFilename": "README.md",
  "_id": "rework-ie-limits@0.1.1",
  "_from": "rework-ie-limits@~0.1.1"
}
