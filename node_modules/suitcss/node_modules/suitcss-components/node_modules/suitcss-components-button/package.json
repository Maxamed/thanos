{
  "name": "suitcss-components-button",
  "description": "Structural button styles for SUIT CSS",
  "version": "4.0.0",
  "style": "index.css",
  "files": [
    "index.css",
    "lib"
  ],
  "devDependencies": {
    "suitcss-components-test": "*",
    "suitcss-preprocessor": "~0.3.0"
  },
  "scripts": {
    "build": "npm run setup && npm run preprocess",
    "build-test": "npm run setup && npm run preprocess-test",
    "preprocess": "suitcss index.css build/build.css",
    "preprocess-test": "suitcss test/test.css build/test.css",
    "setup": "npm install && mkdir -p build"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/suitcss/components-button.git"
  },
  "keywords": [
    "browser",
    "css-components",
    "button",
    "suitcss",
    "style"
  ],
  "readme": "# SUIT CSS components-button\n\nA SUIT CSS component that provides a structural UI button template to be\nextended with modifiers.\n\nRead more about [SUIT CSS's design principles](https://github.com/suitcss/suit/).\n\n## Installation\n\n* [npm](http://npmjs.org/): `npm install suitcss-components-button`\n* [Component(1)](https://github.com/component/component/): `component install suitcss/components-button`\n* [Bower](http://bower.io/): `bower install suit-components-button`\n\n## Available classes\n\n* `Button` - [core] The core button component\n* `is-disabled` - [state] For disabled-state button styles (themes)\n\nN.B. You must also include the `disabled` attribute on `button` and `input`\nelements. For `a` elements, you should remove the `href` attribute and prevent\nJavaScript event handlers from firing.\n\n## Configurable variables\n\n* `--Button-border-width`\n* `--Button-border-color`\n* `--Button-color`\n* `--Button-font`\n* `--Button-padding`\n* `--Button-disabled-opacity`\n\n## Use\n\nExamples:\n\n```html\n<a class=\"Button\" href=\"{{url}}\">Sign up</a>\n\n<button class=\"Button Button--default is-disabled\" type=\"button\">Close</button>\n\n<input class=\"Button Button--primary is-pressed\" type=\"submit\" value=\"Submit\">\n```\n\n### Theming / extending\n\nThe CSS is focused on common structural requirements for buttons. You can build\nyour application-specific theme styles in your app. For example:\n\n```css\n@import \"suitcss-components-button\";\n\n/**\n * Modifier: default buttons\n */\n\n.Button--default {\n  background-color: #eee;\n  color: #444;\n  border-color: #d9d9d9 #d9d9d9 #ccc;\n  border-radius: 2px;\n}\n\n.Button--default:hover,\n.Button--default:focus,\n.Button--default:active,\n.Button--default.is-pressed {\n  background-color: #f5f5f5;\n  color: #222;\n  border-color: #c6c6c6 #c6c6c6 #bbb;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.Button--default:focus {\n  border-color: #069;\n  outline: 0;\n}\n\n.Button--default:active,\n.Button--default.is-pressed {\n  background-color: #ccc;\n  box-shadow: inset 0 1px 2px rgba(0,0,0, 0.2);\n}\n\n/**\n * Modifier: large buttons\n */\n\n.Button--large {\n  font-size: 1.5em;\n  padding: 0.75em 1.5em;\n}\n```\n\n## Testing\n\nInstall [Node](http://nodejs.org) (comes with npm).\n\n```\nnpm install\n```\n\nTo generate a build:\n\n```\nnpm run build\n```\n\nTo generate the testing build.\n\n```\nnpm run build-test\n```\n\nBasic visual tests are in `test/index.html`.\n\n## Browser support\n\n* Google Chrome\n* Firefox\n* Opera\n* Safari\n* Internet Explorer 8+\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/suitcss/components-button/issues"
  },
  "_id": "suitcss-components-button@4.0.0",
  "dist": {
    "shasum": "eed88faed6cc6e08ea5300fc6e61212cb751930e"
  },
  "_from": "suitcss-components-button@^4.0.0",
  "_resolved": "https://registry.npmjs.org/suitcss-components-button/-/suitcss-components-button-4.0.0.tgz"
}
